apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// For Code coverage
apply plugin: 'jacoco'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0.0"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets { main.java.srcDirs += 'src/main/kotlin' }

    /*
    * To enable Android Data Binding Library
    * See, https://developer.android.com/topic/libraries/data-binding/index.html
    * */
    dataBinding {
        enabled = true
    }

    // Fix build error on including libs that with these files
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/main.kotlin_module'
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // continue build even found lint error
    lintOptions {
        abortOnError false
    }

    dexOptions {
        // Avoid proguard build with OOM error
        javaMaxHeapSize "4g"
        jumboMode = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

dependencies {

    //****** These libs must be listed in the sub projects. Otherwise, it will fail to build ******
    // =============================================================
    // <<<<<<<<<<<<<<<<<<<< MUST ADD LIBS START >>>>>>>>>>>>>>>>>>>>
    // Android support libs
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-$rootProject.ext.versions.kotlin_env:$rootProject.ext.versions.kotlin_plugin"

    // Dagger 2
    implementation "com.google.dagger:dagger:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger_2"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger_2"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger_2"

    // AndroidEasyLog
    implementation "com.sotwtm.util:ec-log:$rootProject.ext.versions.android_ec_log"
    // <<<<<<<<<<<<<<<<<<<< MUST ADD LIBS END >>>>>>>>>>>>>>>>>>>>
    // ===========================================================

    /***** For Unit Test *****/
    androidTestImplementation "com.google.dagger:dagger:$rootProject.ext.versions.dagger_2"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.ext.versions.dagger_2"
    testImplementation deps.junit
    testImplementation "com.google.dagger:dagger:$rootProject.ext.versions.dagger_2"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.ext.versions.dagger_2"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.versions.mockito"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.versions.mockito"
    testImplementation "org.powermock:powermock-api-mockito2:$rootProject.ext.versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4-rule-agent:$rootProject.ext.versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4-rule:$rootProject.ext.versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.versions.power_mock"
}
